<!--------------------------------------------------------------------------------------------- 
Copyright Â© 2011 DuPont. All rights reserved. 
Author: Thomas Snyder
Email: thomas.snyder@usa.dupont.com, tom@3ddd.com

TES20120427 Added support for Case and Solution where API Name fields is not 'Name'
	Added onSelect event attribute.
 ------------------------------------------------------------------------------------------------>
<apex:component id="ac" controller="ctrlAutoComplete_SObject">
    <apex:attribute name="for" description="parent Component"  type="String" required="true" />
    <apex:attribute name="sObjectType" description="SObjectType"  type="String" required="true"/>
    <apex:attribute name="fields" description="Any additional fields you'd like to search and include in the display."  type="String" required="false"/>
    <apex:attribute name="where" description="Where clause"  type="String" required="false" />
    <apex:attribute name="minLength" description="Min length of search term before ajax lookup"  type="Integer" default="2"/>
    <apex:attribute name="onSelect" description="onSelect function" type="String" default="void" />
    
    <apex:includeScript value="{!URLFOR($Resource.Jquery_1_8_11, 'js/jquery-1.5.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.Jquery_1_8_11, 'js/jquery-ui-1.8.11.custom.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.Jquery_1_8_11,'css/sfdc3/jquery-ui-1.8.11.custom.css')}" />

<head>
    <style>
    .ui-autocomplete-loading { background: white url({!URLFOR($Resource.ajaxLoaders, 'snake_trans_16.gif')}) right center no-repeat; }
    .ui-autocomplete li.ui-menu-item { padding: 1px;  }
    .ui-autocomplete a.ui-menu-item-alternate { background-color: #E6EFF2; }
    .ui-autocomplete a.ui-state-hover { font-weight: normal !important;}
    </style>
</head>

  <script type="text/javascript">

  function getNamefield(sotype) {
     if 	(sotype=='Case') 		return 'CaseNumber';
    else if (sotype=='Solution') 	return 'SolutionName';
    else 							return 'Name'; 
    }     
    
    var j$ = jQuery.noConflict();
    j$(document).ready(function() {
		var sObjects;
		var queryTerm;
		var namefield=getNamefield('{!sObjectType}');   
		
        //hides the lookup ico
        j$(esc('{!for}_lkwgt')).hide();

        j$(esc('{!for}')).autocomplete({
            minLength: {!minLength},
            source: function(request, response) {
                        queryTerm = request.term;
                        ctrlAutoComplete_SObject.query("{!sObjectType}", request.term, "{!fields}", "{!where}", function(result, event){
                            if(event.type == 'exception') {
                                  alert(event.message);
                            } else {
                                 sObjects = result;
                                 response(sObjects);
                            }
                        });
                   },
            open: function( event, ui ) {
              j$(this).autocomplete( "widget" )
                .find( "ui-menu-item-alternate" )
                  .removeClass( "ui-menu-item-alternate" )
                .end()
                .find( "li.ui-menu-item:odd a" )
                  .addClass( "ui-menu-item-alternate" );
            },
            focus: function( event, ui ) {
                    j$(esc('{!for}')).val(j$(document.createElement('div')).html(ui.item[namefield]).text());
                    return false;
                    },
            select: function( event, ui ) {
                    var str = j$(document.createElement('div')).html(ui.item[namefield]).text();
                       j$(esc('{!for}')).val( str );
                       j$(esc('{!for}_lkid')).val( ui.item.Id );
                       j$(esc('{!for}_lkold')).val( str );
                       {!onSelect}(ui.item, 'autocomplete_select');
                        return false;
                    },
         })
         .data( "autocomplete" )._renderItem = function( ul, item ) {
            var entry = "<a>" + item[namefield];
            j$.each("{!fields}".split(",") , function(key, value) {
                if (item[value]!=null && item[value]!='undefined') 
                    entry = entry + "  - <em>"+item[value]+"</em>";
            });
            entry = entry + "</a>";
            entry = entry.replace(queryTerm, "<b>" + queryTerm + "</b>");
            return j$( "<li></li>" )
                .data( "item.autocomplete", item )
                .append( entry )
                .appendTo( ul );
        };
    });

    function esc(myid) {
           return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
    }    

  </script>
  
</apex:component>