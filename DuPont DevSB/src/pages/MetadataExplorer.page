<apex:page id="pg" controller="ctrlMetadataExplorer" cache="false" tabstyle="Metadata__c" sidebar="false" action="{!init}">
<apex:includeScript value="{!URLFOR($Resource.Jquery_1_8_11, 'js/jquery-1.5.1.min.js')}" />
<style>

.treeview  li.collapsable span.reference { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'password.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.boolean { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'ok.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.string { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'text.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.number { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'stock_page_number.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.date { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'date.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.datetime { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'date.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.multipicklist { padding: 1px 0 1px 16px; display: block; background: url({!URLFOR($Resource.icons16,'ui_list_box.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.picklist { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'picklist.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.sobject { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'table.png')}) 0 0 no-repeat; }

.treeview  li.collapsable span.double { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'stock_page_number.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.percent { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'percent.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.currency { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'dollars.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.textarea { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'applix.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.id { padding: 1px 0 1px 16px; display: block; background: url({!URLFOR($Resource.icons16,'primarykey.png')}) 0 0 no-repeat; }
.treeview  li.collapsable span.phone { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'phone.png')}) 0 0 no-repeat; }


.treeview  span.visualforce { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'application.png')}) 0 0 no-repeat; }
.treeview  span.workflow 	{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'refresh.png')}) 0 0 no-repeat; }
.treeview  span.apex_code 	{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'script.png')}) 0 0 no-repeat; }
.treeview  span.recordtype 	{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.jQuery_treeview,'/jquery-treeview/images/file.gif')}) 0 0 no-repeat; }
.treeview  span.layout 		{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.jQuery_treeview,'/jquery-treeview/images/file.gif')}) 0 0 no-repeat; }
.treeview  span.workflowfieldupdate 	{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'database_field__edit_.png')}) 0 0 no-repeat; }
.treeview  span.workflowrule 			{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'refresh.png')}) 0 0 no-repeat; }
.treeview  span.workflowalert 			{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'attention1.png')}) 0 0 no-repeat; }
.treeview  span.workflowtask 			{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'aministrator_1_(add).png')}) 0 0 no-repeat; }
.treeview  span.trigger 	{ padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.icons16,'connect3.png')}) 0 0 no-repeat; }



.treeview  li.collapsable span.loading { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.processing_sm)}) 0 0 no-repeat; }
.treeview  li.collapsable span.folder { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.jQuery_treeview,'/jquery-treeview/images/folder.gif')}) 0 0 no-repeat; }
.treeview  li.expandable span.folder { padding: 1px 0 1px 17px; display: block; background: url({!URLFOR($Resource.jQuery_treeview,'/jquery-treeview/images/folder-closed.gif')}) 0 0 no-repeat; }
.treeview  .hover { color: #015BA7; cursor: pointer; }
</style>


<script>


//use for dynamic loading
function onEvent_handler(id, e) {

    var target = e.currentTarget.id.substring(3);
    if (target!='root') {
        e.target.innerHTML='<img src="{!URLFOR($Resource.processing_sm)}"/>';
        JSonHitAreaEvent(target, e.type);
        //e.preventDefault();
        e.stopPropagation();
        }
    
}

    function onTVEvent(id, e) {
        document.body.style.cursor='wait';
        if (e=='expand')
            ApexonExpand(id, e);  
        else
			ApexonEvent(id, e);
    }

</script>
<apex:form >

<apex:sectionHeader title="Metadata" subtitle="Metadata Inspector"  />
                <apex:outputPanel id="debug" style="width:100%" rendered="{!$CurrentPage.parameters.debug='1'}">
                    selectedItem: {!selectedItem}<br/>
                    selectedSObject: {!selectedSObject}<br/>
                    event: {!event}<br/>
                    eventItem: {!eventItem}<br/>
                    dynamic: {!dynamic}<br/>
                </apex:outputPanel>
<br></br>
<!--
<div class="ptBreadcrumb">&nbsp;Â«&nbsp;<a href="/{!ancorObject.id}">Back to ...</a></div>
-->
<apex:outputPanel id="err" rendered="{!errMsg!=null}">
    <h3><b>{!errMsg}</b></h3>
</apex:outputPanel>

<apex:outputPanel id="required" rendered="{!$CurrentPage.parameters.req='1'}">
    <span style="color:red;font-size:x-large;vertical-align:top;line-height:20px;" align="right"><b>Metadata is required for this record.</b></span><br/><br/>
</apex:outputPanel>


<apex:outputPanel id="ok" rendered="{!ISBLANK(errMsg)}" layout="none">


    <apex:actionFunction action="{!onEvent}" name="ApexonExpand" rerender="selectors,debug" oncomplete="document.body.style.cursor='auto';">
        <apex:param name="tvEvent" assignTo="{!eventItem}" value="" />
        <apex:param name="tvEventItem" assignTo="{!event}" value="" />
    </apex:actionFunction>

    
    <apex:actionFunction action="{!onEvent}" name="ApexonEvent" rerender="body,debug" oncomplete="document.body.style.cursor='auto';">
        <apex:param name="tvEvent" assignTo="{!eventItem}" value="" />
        <apex:param name="tvEventItem" assignTo="{!event}" value="" />
    </apex:actionFunction>
    
    <apex:actionFunction action="{!SObjectOnSelect}" name="JS_SObject_OnSelect" oncomplete="document.body.style.cursor='auto';" rerender="ok,debug" >
        <apex:param name="firstParam" assignTo="{!selectedSObjectId}" value="" />
    </apex:actionFunction>

<table style="width:100%">
		<tr>
			<!-------------------------------
			LEFTNAV
			-------------------------------->
            <td style="width:350px;" valign="top">
                <apex:outputPanel id="selectors" style="width:350px">
                <div class="bPageBlock apexDefaultPageBlock secondaryPalette">
                <apex:pageBlock mode="maindetail" >
              
                 <apex:pageBlockSection title="Select SObject" columns="1">
                    <apex:selectList id="sl" value="{!selectedSObjectId}" multiselect="false" size="1" onchange="javascript:document.body.style.cursor='wait';JS_SObject_OnSelect(this.value);">
                        <apex:selectOptions value="{!sObjects}" />
                    </apex:selectList>
                </apex:pageBlockSection>
                             	
                <apex:pageBlockSection title="AutoComplete" columns="1">
                    <c:autoComplete data="{!rootNode.JSON}" OnSelect="document.body.style.cursor='wait'; autoComplete_OnSelect" />
                </apex:pageBlockSection> 
            	
                <apex:pageBlockSection title="Tree View Selection" columns="1">
                    <c:jqTree rootNode="{!rootNode}" showRoot="true" OnEvent="document.body.style.cursor='wait'; onTVEvent" dynamic="true"/> 
                </apex:pageBlockSection>
    
                </apex:pageBlock>
                </div>
                </apex:outputPanel>
            </td>
			<!-------------------------------
			BODY
			-------------------------------->
            <td valign="top"> 
			<apex:pageMessages />
			<apex:outputPanel id="body" style="width:100%">

                <!-------------------------------
                SHOW SELECTED NODES (MULTI)
                -------------------------------->
                <apex:outputPanel id="Multi" rendered="{!isMulti}">
				<apex:pageBlock title="Selected Items">
					<apex:pageBlockButtons location="bottom">
						<apex:commandButton value="Save" action="{!saveMulti}" rendered="{!NOT(noAncorMode)}" reRender="body"/>
					</apex:pageBlockButtons>	
                	<c:SelectedNodesList primary="{!SelectedNodes.primaryId}" selectedNodes="{!SelectedNodes.Items}"
                		fieldSet="{!selectListFieldSet}" />
				</apex:pageblock>
				</apex:outputPanel>
                
                
                <!-------------------------------
                SHOW SELECTED NODE
                -------------------------------->
                <apex:pageBlock id="stdPV">       
				<apex:outputPanel id="selNodeInlineEdit" layout="none" rendered="{!noAncorMode}">
                	<apex:detail subject="{!SelectedItem}" relatedList="false" title="false" inlineEdit="true" onComplete="onlyInlineButtons();"/>
	   				<script type="text/javascript">
	   					var j$ = jQuery.noConflict();
	   					j$(document).ready(onlyInlineButtons());
	   					function onlyInlineButtons(){
							j$("div[id='{!$Component.stdPV}'] td[class^='pbButton'] *:not([name^=inlineEdit])").remove();            
	                	};
	                </script>             	
                </apex:outputPanel>
                </apex:pageBlock>
                
                
			</apex:outputPanel>
            </td>
		</tr>
	</table>

</apex:outputPanel> 
        <br/>
        <br/>
</apex:form>
</apex:page>